//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.19 at 11:10:14 AM CST 
//


package au.org.ecoinformatics.eml.jaxb.sysmeta;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * *Person* represents metadata about a :term:`Principal`
 *       that is a person and that can be used by clients and nodes for
 *       :class:`Types.AccessPolicy` information. The mutable properties of a
 *       *Person* instance can only be changed by itself (i.e., the Subject
 *       identifying the Person instance) and by the Coordinating Node identity,
 *       but can be read by any identity in the DataONE system.
 *       
 * 
 * <p>Java class for Person complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Person">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="subject" type="{http://ns.dataone.org/service/types/v1}Subject"/>
 *         &lt;element name="givenName" type="{http://ns.dataone.org/service/types/v1}NonEmptyString" maxOccurs="unbounded"/>
 *         &lt;element name="familyName" type="{http://ns.dataone.org/service/types/v1}NonEmptyString"/>
 *         &lt;element name="email" type="{http://ns.dataone.org/service/types/v1}NonEmptyString" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="isMemberOf" type="{http://ns.dataone.org/service/types/v1}Subject" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="equivalentIdentity" type="{http://ns.dataone.org/service/types/v1}Subject" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="verified" type="{http://www.w3.org/2001/XMLSchema}boolean" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Person", propOrder = {
    "subject",
    "givenNames",
    "familyName",
    "emails",
    "isMemberOves",
    "equivalentIdentities",
    "verified"
})
@XmlRootElement(name = "person")
public class Person {

    @XmlElement(required = true)
    protected Subject subject;
    @XmlElement(name = "givenName", required = true)
    protected List<String> givenNames;
    @XmlElement(required = true)
    protected String familyName;
    @XmlElement(name = "email")
    protected List<String> emails;
    @XmlElement(name = "isMemberOf")
    protected List<Subject> isMemberOves;
    @XmlElement(name = "equivalentIdentity")
    protected List<Subject> equivalentIdentities;
    protected Boolean verified;

    /**
     * Gets the value of the subject property.
     * 
     * @return
     *     possible object is
     *     {@link Subject }
     *     
     */
    public Subject getSubject() {
        return subject;
    }

    /**
     * Sets the value of the subject property.
     * 
     * @param value
     *     allowed object is
     *     {@link Subject }
     *     
     */
    public void setSubject(Subject value) {
        this.subject = value;
    }

    /**
     * Gets the value of the givenNames property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the givenNames property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getGivenNames().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getGivenNames() {
        if (givenNames == null) {
            givenNames = new ArrayList<String>();
        }
        return this.givenNames;
    }

    /**
     * Gets the value of the familyName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getFamilyName() {
        return familyName;
    }

    /**
     * Sets the value of the familyName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setFamilyName(String value) {
        this.familyName = value;
    }

    /**
     * Gets the value of the emails property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the emails property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEmails().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getEmails() {
        if (emails == null) {
            emails = new ArrayList<String>();
        }
        return this.emails;
    }

    /**
     * Gets the value of the isMemberOves property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the isMemberOves property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getIsMemberOves().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Subject }
     * 
     * 
     */
    public List<Subject> getIsMemberOves() {
        if (isMemberOves == null) {
            isMemberOves = new ArrayList<Subject>();
        }
        return this.isMemberOves;
    }

    /**
     * Gets the value of the equivalentIdentities property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the equivalentIdentities property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEquivalentIdentities().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Subject }
     * 
     * 
     */
    public List<Subject> getEquivalentIdentities() {
        if (equivalentIdentities == null) {
            equivalentIdentities = new ArrayList<Subject>();
        }
        return this.equivalentIdentities;
    }

    /**
     * Gets the value of the verified property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isVerified() {
        return verified;
    }

    /**
     * Sets the value of the verified property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setVerified(Boolean value) {
        this.verified = value;
    }

    public Person withSubject(Subject value) {
        setSubject(value);
        return this;
    }

    public Person withGivenNames(String... values) {
        if (values!= null) {
            for (String value: values) {
                getGivenNames().add(value);
            }
        }
        return this;
    }

    public Person withGivenNames(Collection<String> values) {
        if (values!= null) {
            getGivenNames().addAll(values);
        }
        return this;
    }

    public Person withFamilyName(String value) {
        setFamilyName(value);
        return this;
    }

    public Person withEmails(String... values) {
        if (values!= null) {
            for (String value: values) {
                getEmails().add(value);
            }
        }
        return this;
    }

    public Person withEmails(Collection<String> values) {
        if (values!= null) {
            getEmails().addAll(values);
        }
        return this;
    }

    public Person withIsMemberOves(Subject... values) {
        if (values!= null) {
            for (Subject value: values) {
                getIsMemberOves().add(value);
            }
        }
        return this;
    }

    public Person withIsMemberOves(Collection<Subject> values) {
        if (values!= null) {
            getIsMemberOves().addAll(values);
        }
        return this;
    }

    public Person withEquivalentIdentities(Subject... values) {
        if (values!= null) {
            for (Subject value: values) {
                getEquivalentIdentities().add(value);
            }
        }
        return this;
    }

    public Person withEquivalentIdentities(Collection<Subject> values) {
        if (values!= null) {
            getEquivalentIdentities().addAll(values);
        }
        return this;
    }

    public Person withVerified(Boolean value) {
        setVerified(value);
        return this;
    }

}
