//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.03 at 05:40:36 PM CST 
//


package au.org.ecoinformatics.eml.jaxb.eml;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ProcedureStepType complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ProcedureStepType">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;sequence>
 *           &lt;element name="description" type="{eml://ecoinformatics.org/text-2.1.1}TextType"/>
 *           &lt;choice maxOccurs="unbounded" minOccurs="0">
 *             &lt;element name="citation" type="{eml://ecoinformatics.org/literature-2.1.1}CitationType"/>
 *             &lt;element name="protocol" type="{eml://ecoinformatics.org/protocol-2.1.1}ProtocolType"/>
 *           &lt;/choice>
 *         &lt;/sequence>
 *         &lt;element name="instrumentation" type="{eml://ecoinformatics.org/resource-2.1.1}NonEmptyStringType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="software" type="{eml://ecoinformatics.org/software-2.1.1}SoftwareType" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="subStep" type="{eml://ecoinformatics.org/methods-2.1.1}ProcedureStepType" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ProcedureStepType", namespace = "eml://ecoinformatics.org/methods-2.1.1", propOrder = {
    "description",
    "citationOrProtocol",
    "instrumentation",
    "software",
    "subStep"
})
@XmlSeeAlso({
    au.org.ecoinformatics.eml.jaxb.eml.MethodsType.MethodStep.class
})
public class ProcedureStepType {

    @XmlElement(required = true)
    protected TextType description;
    @XmlElements({
        @XmlElement(name = "citation", type = CitationType.class),
        @XmlElement(name = "protocol", type = ProtocolType.class)
    })
    protected List<Object> citationOrProtocol;
    protected List<String> instrumentation;
    protected List<SoftwareType> software;
    protected List<ProcedureStepType> subStep;

    /**
     * Gets the value of the description property.
     * 
     * @return
     *     possible object is
     *     {@link TextType }
     *     
     */
    public TextType getDescription() {
        return description;
    }

    /**
     * Sets the value of the description property.
     * 
     * @param value
     *     allowed object is
     *     {@link TextType }
     *     
     */
    public void setDescription(TextType value) {
        this.description = value;
    }

    /**
     * Gets the value of the citationOrProtocol property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the citationOrProtocol property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getCitationOrProtocol().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link CitationType }
     * {@link ProtocolType }
     * 
     * 
     */
    public List<Object> getCitationOrProtocol() {
        if (citationOrProtocol == null) {
            citationOrProtocol = new ArrayList<Object>();
        }
        return this.citationOrProtocol;
    }

    /**
     * Gets the value of the instrumentation property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the instrumentation property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getInstrumentation().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getInstrumentation() {
        if (instrumentation == null) {
            instrumentation = new ArrayList<String>();
        }
        return this.instrumentation;
    }

    /**
     * Gets the value of the software property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the software property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSoftware().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link SoftwareType }
     * 
     * 
     */
    public List<SoftwareType> getSoftware() {
        if (software == null) {
            software = new ArrayList<SoftwareType>();
        }
        return this.software;
    }

    /**
     * Gets the value of the subStep property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subStep property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubStep().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link ProcedureStepType }
     * 
     * 
     */
    public List<ProcedureStepType> getSubStep() {
        if (subStep == null) {
            subStep = new ArrayList<ProcedureStepType>();
        }
        return this.subStep;
    }

    public ProcedureStepType withDescription(TextType value) {
        setDescription(value);
        return this;
    }

    public ProcedureStepType withCitationOrProtocol(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getCitationOrProtocol().add(value);
            }
        }
        return this;
    }

    public ProcedureStepType withCitationOrProtocol(Collection<Object> values) {
        if (values!= null) {
            getCitationOrProtocol().addAll(values);
        }
        return this;
    }

    public ProcedureStepType withInstrumentation(String... values) {
        if (values!= null) {
            for (String value: values) {
                getInstrumentation().add(value);
            }
        }
        return this;
    }

    public ProcedureStepType withInstrumentation(Collection<String> values) {
        if (values!= null) {
            getInstrumentation().addAll(values);
        }
        return this;
    }

    public ProcedureStepType withSoftware(SoftwareType... values) {
        if (values!= null) {
            for (SoftwareType value: values) {
                getSoftware().add(value);
            }
        }
        return this;
    }

    public ProcedureStepType withSoftware(Collection<SoftwareType> values) {
        if (values!= null) {
            getSoftware().addAll(values);
        }
        return this;
    }

    public ProcedureStepType withSubStep(ProcedureStepType... values) {
        if (values!= null) {
            for (ProcedureStepType value: values) {
                getSubStep().add(value);
            }
        }
        return this;
    }

    public ProcedureStepType withSubStep(Collection<ProcedureStepType> values) {
        if (values!= null) {
            getSubStep().addAll(values);
        }
        return this;
    }

}
