//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.03 at 05:40:32 PM CST 
//


package au.org.ecoinformatics.eml.jaxb.sysmeta;

import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;


/**
 * The overall replication policy for the node that
 *       expresses constraints on object size, total objects, source nodes, and
 *       object format types. A node may choose to restrict replication from only
 *       certain peer nodes, may have file size limits, total allocated size
 *       limits, or may want to focus on being a :term:`replication target` for
 *       domain-specific object formats.
 * 
 * <p>Java class for NodeReplicationPolicy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="NodeReplicationPolicy">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="maxObjectSize" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" minOccurs="0"/>
 *         &lt;element name="spaceAllocated" type="{http://www.w3.org/2001/XMLSchema}unsignedLong" minOccurs="0"/>
 *         &lt;element name="allowedNode" type="{http://ns.dataone.org/service/types/v1}NodeReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="allowedObjectFormat" type="{http://ns.dataone.org/service/types/v1}ObjectFormatIdentifier" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "NodeReplicationPolicy", propOrder = {
    "maxObjectSize",
    "spaceAllocated",
    "allowedNodes",
    "allowedObjectFormats"
})
@XmlRootElement(name = "nodeReplicationPolicy")
public class NodeReplicationPolicy {

    @XmlSchemaType(name = "unsignedLong")
    protected BigInteger maxObjectSize;
    @XmlSchemaType(name = "unsignedLong")
    protected BigInteger spaceAllocated;
    @XmlElement(name = "allowedNode")
    protected List<NodeReference> allowedNodes;
    @XmlElement(name = "allowedObjectFormat")
    protected List<String> allowedObjectFormats;

    /**
     * Gets the value of the maxObjectSize property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getMaxObjectSize() {
        return maxObjectSize;
    }

    /**
     * Sets the value of the maxObjectSize property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setMaxObjectSize(BigInteger value) {
        this.maxObjectSize = value;
    }

    /**
     * Gets the value of the spaceAllocated property.
     * 
     * @return
     *     possible object is
     *     {@link BigInteger }
     *     
     */
    public BigInteger getSpaceAllocated() {
        return spaceAllocated;
    }

    /**
     * Sets the value of the spaceAllocated property.
     * 
     * @param value
     *     allowed object is
     *     {@link BigInteger }
     *     
     */
    public void setSpaceAllocated(BigInteger value) {
        this.spaceAllocated = value;
    }

    /**
     * Gets the value of the allowedNodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the allowedNodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAllowedNodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeReference }
     * 
     * 
     */
    public List<NodeReference> getAllowedNodes() {
        if (allowedNodes == null) {
            allowedNodes = new ArrayList<NodeReference>();
        }
        return this.allowedNodes;
    }

    /**
     * Gets the value of the allowedObjectFormats property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the allowedObjectFormats property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getAllowedObjectFormats().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getAllowedObjectFormats() {
        if (allowedObjectFormats == null) {
            allowedObjectFormats = new ArrayList<String>();
        }
        return this.allowedObjectFormats;
    }

    public NodeReplicationPolicy withMaxObjectSize(BigInteger value) {
        setMaxObjectSize(value);
        return this;
    }

    public NodeReplicationPolicy withSpaceAllocated(BigInteger value) {
        setSpaceAllocated(value);
        return this;
    }

    public NodeReplicationPolicy withAllowedNodes(NodeReference... values) {
        if (values!= null) {
            for (NodeReference value: values) {
                getAllowedNodes().add(value);
            }
        }
        return this;
    }

    public NodeReplicationPolicy withAllowedNodes(Collection<NodeReference> values) {
        if (values!= null) {
            getAllowedNodes().addAll(values);
        }
        return this;
    }

    public NodeReplicationPolicy withAllowedObjectFormats(String... values) {
        if (values!= null) {
            for (String value: values) {
                getAllowedObjectFormats().add(value);
            }
        }
        return this;
    }

    public NodeReplicationPolicy withAllowedObjectFormats(Collection<String> values) {
        if (values!= null) {
            getAllowedObjectFormats().addAll(values);
        }
        return this;
    }

}
