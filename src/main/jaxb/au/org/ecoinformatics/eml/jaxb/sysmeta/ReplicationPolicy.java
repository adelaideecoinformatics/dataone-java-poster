//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.02.03 at 05:40:32 PM CST 
//


package au.org.ecoinformatics.eml.jaxb.sysmeta;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * The *ReplicationPolicy* for an object defines if
 *       replication should be attempted for this object, and if so, how many
 *       replicas should be maintained. It also permits specification of
 *       preferred and blocked nodes as potential replication targets.
 *       
 * 
 * <p>Java class for ReplicationPolicy complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ReplicationPolicy">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="preferredMemberNode" type="{http://ns.dataone.org/service/types/v1}NodeReference" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="blockedMemberNode" type="{http://ns.dataone.org/service/types/v1}NodeReference" maxOccurs="unbounded" minOccurs="0"/>
 *       &lt;/sequence>
 *       &lt;attribute name="replicationAllowed" type="{http://www.w3.org/2001/XMLSchema}boolean" />
 *       &lt;attribute name="numberReplicas" type="{http://www.w3.org/2001/XMLSchema}int" />
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ReplicationPolicy", propOrder = {
    "preferredMemberNodes",
    "blockedMemberNodes"
})
@XmlRootElement(name = "replicationPolicy")
public class ReplicationPolicy {

    @XmlElement(name = "preferredMemberNode")
    protected List<NodeReference> preferredMemberNodes;
    @XmlElement(name = "blockedMemberNode")
    protected List<NodeReference> blockedMemberNodes;
    @XmlAttribute(name = "replicationAllowed")
    protected Boolean replicationAllowed;
    @XmlAttribute(name = "numberReplicas")
    protected Integer numberReplicas;

    /**
     * Gets the value of the preferredMemberNodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the preferredMemberNodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPreferredMemberNodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeReference }
     * 
     * 
     */
    public List<NodeReference> getPreferredMemberNodes() {
        if (preferredMemberNodes == null) {
            preferredMemberNodes = new ArrayList<NodeReference>();
        }
        return this.preferredMemberNodes;
    }

    /**
     * Gets the value of the blockedMemberNodes property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the blockedMemberNodes property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getBlockedMemberNodes().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NodeReference }
     * 
     * 
     */
    public List<NodeReference> getBlockedMemberNodes() {
        if (blockedMemberNodes == null) {
            blockedMemberNodes = new ArrayList<NodeReference>();
        }
        return this.blockedMemberNodes;
    }

    /**
     * Gets the value of the replicationAllowed property.
     * 
     * @return
     *     possible object is
     *     {@link Boolean }
     *     
     */
    public Boolean isReplicationAllowed() {
        return replicationAllowed;
    }

    /**
     * Sets the value of the replicationAllowed property.
     * 
     * @param value
     *     allowed object is
     *     {@link Boolean }
     *     
     */
    public void setReplicationAllowed(Boolean value) {
        this.replicationAllowed = value;
    }

    /**
     * Gets the value of the numberReplicas property.
     * 
     * @return
     *     possible object is
     *     {@link Integer }
     *     
     */
    public Integer getNumberReplicas() {
        return numberReplicas;
    }

    /**
     * Sets the value of the numberReplicas property.
     * 
     * @param value
     *     allowed object is
     *     {@link Integer }
     *     
     */
    public void setNumberReplicas(Integer value) {
        this.numberReplicas = value;
    }

    public ReplicationPolicy withPreferredMemberNodes(NodeReference... values) {
        if (values!= null) {
            for (NodeReference value: values) {
                getPreferredMemberNodes().add(value);
            }
        }
        return this;
    }

    public ReplicationPolicy withPreferredMemberNodes(Collection<NodeReference> values) {
        if (values!= null) {
            getPreferredMemberNodes().addAll(values);
        }
        return this;
    }

    public ReplicationPolicy withBlockedMemberNodes(NodeReference... values) {
        if (values!= null) {
            for (NodeReference value: values) {
                getBlockedMemberNodes().add(value);
            }
        }
        return this;
    }

    public ReplicationPolicy withBlockedMemberNodes(Collection<NodeReference> values) {
        if (values!= null) {
            getBlockedMemberNodes().addAll(values);
        }
        return this;
    }

    public ReplicationPolicy withReplicationAllowed(Boolean value) {
        setReplicationAllowed(value);
        return this;
    }

    public ReplicationPolicy withNumberReplicas(Integer value) {
        setNumberReplicas(value);
        return this;
    }

}
