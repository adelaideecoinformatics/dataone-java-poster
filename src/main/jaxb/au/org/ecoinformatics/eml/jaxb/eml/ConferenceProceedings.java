//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.23 at 04:26:08 PM CST 
//


package au.org.ecoinformatics.eml.jaxb.eml;

import java.util.Collection;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for ConferenceProceedings complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="ConferenceProceedings">
 *   &lt;complexContent>
 *     &lt;extension base="{eml://ecoinformatics.org/literature-2.1.1}Chapter">
 *       &lt;sequence>
 *         &lt;element name="conferenceName" type="{eml://ecoinformatics.org/resource-2.1.1}NonEmptyStringType" minOccurs="0"/>
 *         &lt;element name="conferenceDate" type="{eml://ecoinformatics.org/resource-2.1.1}NonEmptyStringType" minOccurs="0"/>
 *         &lt;element name="conferenceLocation" type="{eml://ecoinformatics.org/party-2.1.1}Address" minOccurs="0"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ConferenceProceedings", propOrder = {
    "conferenceName",
    "conferenceDate",
    "conferenceLocation"
})
public class ConferenceProceedings
    extends Chapter
{

    protected String conferenceName;
    protected String conferenceDate;
    protected Address conferenceLocation;

    /**
     * Gets the value of the conferenceName property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConferenceName() {
        return conferenceName;
    }

    /**
     * Sets the value of the conferenceName property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConferenceName(String value) {
        this.conferenceName = value;
    }

    /**
     * Gets the value of the conferenceDate property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getConferenceDate() {
        return conferenceDate;
    }

    /**
     * Sets the value of the conferenceDate property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setConferenceDate(String value) {
        this.conferenceDate = value;
    }

    /**
     * Gets the value of the conferenceLocation property.
     * 
     * @return
     *     possible object is
     *     {@link Address }
     *     
     */
    public Address getConferenceLocation() {
        return conferenceLocation;
    }

    /**
     * Sets the value of the conferenceLocation property.
     * 
     * @param value
     *     allowed object is
     *     {@link Address }
     *     
     */
    public void setConferenceLocation(Address value) {
        this.conferenceLocation = value;
    }

    public ConferenceProceedings withConferenceName(String value) {
        setConferenceName(value);
        return this;
    }

    public ConferenceProceedings withConferenceDate(String value) {
        setConferenceDate(value);
        return this;
    }

    public ConferenceProceedings withConferenceLocation(Address value) {
        setConferenceLocation(value);
        return this;
    }

    @Override
    public ConferenceProceedings withChapterNumber(String value) {
        setChapterNumber(value);
        return this;
    }

    @Override
    public ConferenceProceedings withEditor(ResponsibleParty... values) {
        if (values!= null) {
            for (ResponsibleParty value: values) {
                getEditor().add(value);
            }
        }
        return this;
    }

    @Override
    public ConferenceProceedings withEditor(Collection<ResponsibleParty> values) {
        if (values!= null) {
            getEditor().addAll(values);
        }
        return this;
    }

    @Override
    public ConferenceProceedings withBookTitle(String value) {
        setBookTitle(value);
        return this;
    }

    @Override
    public ConferenceProceedings withPageRange(String value) {
        setPageRange(value);
        return this;
    }

    @Override
    public ConferenceProceedings withPublisher(ResponsibleParty value) {
        setPublisher(value);
        return this;
    }

    @Override
    public ConferenceProceedings withPublicationPlace(String value) {
        setPublicationPlace(value);
        return this;
    }

    @Override
    public ConferenceProceedings withEdition(String value) {
        setEdition(value);
        return this;
    }

    @Override
    public ConferenceProceedings withVolume(String value) {
        setVolume(value);
        return this;
    }

    @Override
    public ConferenceProceedings withNumberOfVolumes(String value) {
        setNumberOfVolumes(value);
        return this;
    }

    @Override
    public ConferenceProceedings withTotalPages(String value) {
        setTotalPages(value);
        return this;
    }

    @Override
    public ConferenceProceedings withTotalFigures(String value) {
        setTotalFigures(value);
        return this;
    }

    @Override
    public ConferenceProceedings withTotalTables(String value) {
        setTotalTables(value);
        return this;
    }

    @Override
    public ConferenceProceedings withISBN(String value) {
        setISBN(value);
        return this;
    }

}
