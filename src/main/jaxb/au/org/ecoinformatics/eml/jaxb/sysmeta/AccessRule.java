//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.7 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.01.23 at 04:26:04 PM CST 
//


package au.org.ecoinformatics.eml.jaxb.sysmeta;

import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Access control rules are specified by the
 *       :term:`Origin Member Node` when the object is first registered in
 *       DataONE. If no rules are specified at that time, then the object is
 *       deemed to be private and the only user with access to the object (read,
 *       write, or otherwise) is the :term:`Rights Holder`.
 * 
 * <p>Java class for AccessRule complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="AccessRule">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="subject" type="{http://ns.dataone.org/service/types/v1}Subject" maxOccurs="unbounded"/>
 *         &lt;element name="permission" type="{http://ns.dataone.org/service/types/v1}Permission" maxOccurs="unbounded"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AccessRule", propOrder = {
    "subject",
    "permission"
})
public class AccessRule {

    @XmlElement(required = true)
    protected List<Subject> subject;
    @XmlElement(required = true)
    protected List<Permission> permission;

    /**
     * Gets the value of the subject property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the subject property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getSubject().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Subject }
     * 
     * 
     */
    public List<Subject> getSubject() {
        if (subject == null) {
            subject = new ArrayList<Subject>();
        }
        return this.subject;
    }

    /**
     * Gets the value of the permission property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the permission property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getPermission().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Permission }
     * 
     * 
     */
    public List<Permission> getPermission() {
        if (permission == null) {
            permission = new ArrayList<Permission>();
        }
        return this.permission;
    }

    public AccessRule withSubject(Subject... values) {
        if (values!= null) {
            for (Subject value: values) {
                getSubject().add(value);
            }
        }
        return this;
    }

    public AccessRule withSubject(Collection<Subject> values) {
        if (values!= null) {
            getSubject().addAll(values);
        }
        return this;
    }

    public AccessRule withPermission(Permission... values) {
        if (values!= null) {
            for (Permission value: values) {
                getPermission().add(value);
            }
        }
        return this;
    }

    public AccessRule withPermission(Collection<Permission> values) {
        if (values!= null) {
            getPermission().addAll(values);
        }
        return this;
    }

}
